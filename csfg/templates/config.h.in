#pragma once

/* Config ------------------------------------------------------------------- */

#cmakedefine CSFG_BACKTRACE
#cmakedefine CSFG_DEBUG_MEMORY
#cmakedefine CSFG_TESTS

#define CSFG_SIZEOF_VOID_P ${CMAKE_SIZEOF_VOID_P}
#define CSFG_THREADLOCAL ${CSFG_THREADLOCAL}

/* Version string ----------------------------------------------------------- */

#define CSFG_VERSION_MAJOR ${PROJECT_VERSION_MAJOR}
#define CSFG_VERSION_MINOR ${PROJECT_VERSION_MINOR}
#define CSFG_VERSION_PATCH ${PROJECT_VERSION_PATCH}
#define CSFG_VERSION_STR "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}"

#define CSFG_VERSION ( \
    (CSFG_VERSION_MAJOR << 24) | \
    (CSFG_VERSION_MINOR << 16) | \
    (CSFG_VERSION_PATCH << 8) | \
    (/* release candidate */ 0))

/* printf formatting -------------------------------------------------------- */

#if defined(__GNUC__) || defined(__clang__)
#   define CSFG_PRINTF_FORMAT(fmt, params) __attribute__((format(printf, fmt, params)))
#else
#   define CSFG_PRINTF_FORMAT(fmt, params)
#endif

/* misc --------------------------------------------------------------------- */

#ifndef M_PI
#    define M_PI 3.14159265358979323846
#endif

#define CSFG_ARRAY_SIZE(array) ((int)sizeof(array) / (int)sizeof(array[0]))
#define CSFG_DEBUG_ASSERT assert
